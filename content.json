{"meta":{"title":"Lydia's Playground","subtitle":"忙着搬砖，龟速更新","description":null,"author":"Lydia Banana","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"vue-cli搭建项目和打包项目","slug":"hello-world","date":"2019-01-27T07:46:41.568Z","updated":"2019-01-30T13:36:53.768Z","comments":true,"path":"2019/01/27/hello-world/","link":"","permalink":"http://yoursite.com/2019/01/27/hello-world/","excerpt":"","text":"本文内容已烂大街，只是详细理一下步骤，方便队友参考。 1.搭建项目1.1 环境准备——安装node.js和vue-cli 到官网下载安装node.js安装完成后，在命令行工具输入node -v 和 npm -v，显示版本号，说明安装成功。由于众所周知的原因，使用npm比较慢，而且很可能会因为网络问题而出错，所以可以考虑使用taobao源cnpm。全局化安装cnpm：npm install cnpm -g --registry=https://registry.npm.taobao.org 安装vue-cli:cnpm install -g vue-cli查看是否安装成功：vue -V1.2 创建工程项目 初始化工程项目：vue init webpack your-project-name（此处有webpack和webpack-simple等模板，由于打包时针对webpack-simple的bug教程较少，我就使用webpack模板）后续确认项目名称、项目描述、作者、打包方式、是否使用ESLint规范代码等，关系不大： 安装依赖：进入刚创建的项目目录：cd my-project安装：cnpm install 启动服务器：cnpm run dev 之后就可以愉快地开发啦，内容都是热更新的，非常方便。2.打包上线 项目开发完成之后，打包：cnpm run build打包完成后，根目录下会生成 dist 文件夹，将整个dist文件夹或者里面的两个文件放到服务器上就完成部署啦。 可能遇到的问题：使用浏览器打开是空白页，可能的原因： 引用的css文件和js文件找不到，所以开发的时候如果要引入外部css、js文件，一定要放在static文件夹，引入路径需为相对路径，因为服务器的目录和开发时的目录很可能是不一样的。 项目配置的路径不对：解决办法：打config文件夹里的index.js文件。将build（注意不要改成dev里的了）里面的assetsPublicPath属性更改为相对路径重新打包即可： 路由路径不对：因为服务器无法区分我们自行配置的路由路径和服务器真正的目录路径，所以会出现路由失效的情况，解决办法就是不要使用路由的history模式，这样的话我们自己配置前都会有一个“#”符号。非要使用history模式的话，还有更好的解决办法，需要后端配合设置，我没试过就不讲了。 奇葩原因：之前遇到配置好了以上所有的路径和模式，打开访问还是一片空白，而且没有任何报错。原因竟是……和队友分开开发，之前定义了一个路由文件router.js，后来我更换了模板，处理路由文件时建了一个文件夹router，把之前router.js文件内容放到router下的index.js文件里，本来这两种方式都行，main.js里引入语句也完全一样：import router from &#39;./router&#39;,结果后来用git合并的时候，把我删掉的router.js文件又复制过来了，开发环境没有任何问题，部署就一片空白。解决办法：删掉一个就好。","categories":[],"tags":[]}]}